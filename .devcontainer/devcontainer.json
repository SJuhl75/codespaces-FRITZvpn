{
	"name": "OpenVPN Sample",
	"build": {
		"dockerfile": "Dockerfile"
	},
	
	"features": {
		"ghcr.io/devcontainers/features/sshd": {
        	"version": "latest"
        },
		"ghcr.io/devcontainers-contrib/features/wireguard-apt-get": {
			"version": "latest"
		}
    },
	
	"overrideFeatureInstallOrder": ["ghcr.io/devcontainers/features/common-utils"],
	//"overrideFeatureInstallOrder": [ "ghcr.io/devcontainers/features/node" ]

	// Allow the container to interact with host networking
	"runArgs": ["--cap-add=NET_ADMIN", "--cap-add=NET_RAW", "--device=/dev/net/tun"],

	// Save the contents of the OPENVPN_CONFIG secret to disk - it lands in .devcontainer/openvpn-tmp
	"initializeCommand": "bash .devcontainer/save-config.sh",

	// [Optional] Once the dev container is running, automatically start up the VPN client
	"postStartCommand": "bash .devcontainer/start-vpn.sh",
	

	// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode",
	
	//"localEnv": { 	"REP_VPN": "${containerEnv:REP_VPN:NONE}",
	//"remoteEnv": { "ENABLEVPN": "${remozeEnv:ENABLEVPN:NONE}" }, 
	//"containerEnv": { "REP_VPN": "${containerEnv:REP_VPN:NONE}" },
	//"EnVPN": ${{containerEnv:VARIABLE_NAME:default_value}},
	//"${containerEnv:REP_VPN:"OFF"}",
	// A default value for when the environment variable is not set can be given with ${containerEnv:VARIABLE_NAME:default_value}.
	
	"containerEnv": {
		"ZNODE_ENV": "production",
		"ZAPI_KEY": "your-api-key"
	},
	"remoteEnv": {
			"ZNODE_ENV": "development",
			"ZDB_HOST": "localhost",
			"ZDB_PORT": "5432",
			"ZZA": "${containerEnv:REP_VPN}",
			"ZZB": "${containerEnv:ENABLEVPN}",
			"ZZC": "${ env:DAY_OF_WEEK }",
			"ZZD": "${ env:REP_VPN }",
			"ZZE": "${ env:ENABLEVPN }",
			"ZZF": "${containerEnv}",
			"ZZG": "${containerEnv ENABLEVPN}",
			"ZZH": "${containerEnv:ENABLEVPN}:non"
			//I agree, we support ${env:XYZ} and ${localWorkspaceFolder}. (${localEnv:XYZ} and ${containerEnv} in Insiders.)
	},
	
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
 	"forwardPorts": [2222]
}
