{
	"name": "OpenVPN Sample",
	"build": {
		"dockerfile": "Dockerfile"
	},
	
	"features": {
		"ghcr.io/devcontainers/features/sshd": {
        	"version": "latest"
        },
		"ghcr.io/devcontainers-contrib/features/wireguard-apt-get": {
			"version": "latest"
		},
		"ghcr.io/devcontainers/features/common-utils": {
			"version": "latest",
			"installZsh": true,
			"configureZshAsDefaultShell": true,
			"installOhMyZsh": true,
			"installOhMyZshConfig": true
		},
		"ghcr.io/rocker-org/devcontainer-features/apt-packages": {
			"version": "latest",
			"packages": "iptables,curl,joe,mc" // iptables is necessary for wireguard
		}
    },
	
	// Make sure user vscode is available
	"overrideFeatureInstallOrder": ["ghcr.io/devcontainers/features/common-utils"],

	// Allow the container to interact with host networking
	"runArgs": [
		"--cap-add=NET_ADMIN", 
		"--cap-add=NET_RAW", 
		"--device=/dev/net/tun",
		"--privileged"], // Necessary for wireguard
	

	// Save the contents of the OPENVPN_CONFIG secret to disk - it lands in .devcontainer/vpn-tmp
	"initializeCommand": "bash .devcontainer/save-config.sh",

	// [Optional] Once the dev container is running, automatically start up the VPN client
	"postStartCommand": "bash .devcontainer/start-vpn.sh",
	
	// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode",
	
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
 	"forwardPorts": [2222],

	"customizations": {
		"codespaces": {
			"repositories": {
				"SJuhl75/CoConverse":{
					"permissions": {
						"contents": "write",
						"pull_requests": "write"
					}
				}
			}
		}	
	}


	// https://www.kenmuse.com/blog/getting-user-input-when-starting-a-dev-container/
}
